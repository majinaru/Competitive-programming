#include<bits/stdc++.h>
using namespace std;
#define endl "\n"
using ll = long long;

int p;

int xoro(int n){
    if(n % 4 ==0){
        return n;
    }
    if(n% 4 ==1){
        return 1;
    }
    if(n%4 ==2){
        return n+1;
    }
    if(n % 4 == 3){
        return 0;
    }
}


int prefx(int x, int k){
    if(x % 2 == 1){
        return k;
    }
    else{
        return 0;
    }
}

int sufixo(int x, int k, int i){
    int sufx = x/(1<<i) * (1<<i);
    int num = x / (1<<i);


    if(sufx + k <= x){
        p = prefx(num+1, k);
        return xoro(num+1);
    }
    else{
        p = prefx(num, k);
        return xoro(num);
    }
}


int xor_range(int r, int l){
    return xoro(r) ^ xoro(l-1);
}


void solve(){
    int l, r, i,k;
    cin >> l >> r >> i >> k;

    int total = xor_range(l,r);
    int s = sufixo(r, k,i) ^ sufixo(l-1, k, i);

    cout << (total ^ s ^ p) << endl;
}

int32_t main(){
    cin.tie(0)->sync_with_stdio(0);
    int t;
    cin >> t;
    while(t--){
        solve();
    }

}
